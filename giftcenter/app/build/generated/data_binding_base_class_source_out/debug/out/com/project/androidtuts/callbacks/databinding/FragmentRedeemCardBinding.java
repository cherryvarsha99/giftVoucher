// Generated by view binder compiler. Do not edit!
package com.project.androidtuts.callbacks.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.project.androidtuts.callbacks.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRedeemCardBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnRedeem;

  @NonNull
  public final TextInputEditText codeEditText;

  @NonNull
  public final TextInputLayout codeInputLayout;

  @NonNull
  public final LinearLayout codeInputLinearLayout;

  @NonNull
  public final TextInputEditText messageEditText;

  @NonNull
  public final TextInputLayout messageInputLayout;

  @NonNull
  public final TextInputEditText pinEditText;

  @NonNull
  public final TextInputLayout pinInputLayout;

  @NonNull
  public final LinearLayout redeemBtnLayout;

  @NonNull
  public final View separator;

  private FragmentRedeemCardBinding(@NonNull RelativeLayout rootView, @NonNull Button btnRedeem,
      @NonNull TextInputEditText codeEditText, @NonNull TextInputLayout codeInputLayout,
      @NonNull LinearLayout codeInputLinearLayout, @NonNull TextInputEditText messageEditText,
      @NonNull TextInputLayout messageInputLayout, @NonNull TextInputEditText pinEditText,
      @NonNull TextInputLayout pinInputLayout, @NonNull LinearLayout redeemBtnLayout,
      @NonNull View separator) {
    this.rootView = rootView;
    this.btnRedeem = btnRedeem;
    this.codeEditText = codeEditText;
    this.codeInputLayout = codeInputLayout;
    this.codeInputLinearLayout = codeInputLinearLayout;
    this.messageEditText = messageEditText;
    this.messageInputLayout = messageInputLayout;
    this.pinEditText = pinEditText;
    this.pinInputLayout = pinInputLayout;
    this.redeemBtnLayout = redeemBtnLayout;
    this.separator = separator;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRedeemCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRedeemCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_redeem_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRedeemCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRedeem;
      Button btnRedeem = rootView.findViewById(id);
      if (btnRedeem == null) {
        break missingId;
      }

      id = R.id.codeEditText;
      TextInputEditText codeEditText = rootView.findViewById(id);
      if (codeEditText == null) {
        break missingId;
      }

      id = R.id.codeInputLayout;
      TextInputLayout codeInputLayout = rootView.findViewById(id);
      if (codeInputLayout == null) {
        break missingId;
      }

      id = R.id.codeInputLinearLayout;
      LinearLayout codeInputLinearLayout = rootView.findViewById(id);
      if (codeInputLinearLayout == null) {
        break missingId;
      }

      id = R.id.messageEditText;
      TextInputEditText messageEditText = rootView.findViewById(id);
      if (messageEditText == null) {
        break missingId;
      }

      id = R.id.messageInputLayout;
      TextInputLayout messageInputLayout = rootView.findViewById(id);
      if (messageInputLayout == null) {
        break missingId;
      }

      id = R.id.pinEditText;
      TextInputEditText pinEditText = rootView.findViewById(id);
      if (pinEditText == null) {
        break missingId;
      }

      id = R.id.pinInputLayout;
      TextInputLayout pinInputLayout = rootView.findViewById(id);
      if (pinInputLayout == null) {
        break missingId;
      }

      id = R.id.redeemBtnLayout;
      LinearLayout redeemBtnLayout = rootView.findViewById(id);
      if (redeemBtnLayout == null) {
        break missingId;
      }

      id = R.id.separator;
      View separator = rootView.findViewById(id);
      if (separator == null) {
        break missingId;
      }

      return new FragmentRedeemCardBinding((RelativeLayout) rootView, btnRedeem, codeEditText,
          codeInputLayout, codeInputLinearLayout, messageEditText, messageInputLayout, pinEditText,
          pinInputLayout, redeemBtnLayout, separator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

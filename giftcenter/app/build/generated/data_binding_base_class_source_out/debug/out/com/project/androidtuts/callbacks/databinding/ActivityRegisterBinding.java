// Generated by view binder compiler. Do not edit!
package com.project.androidtuts.callbacks.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.project.androidtuts.callbacks.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnRegister;

  @NonNull
  public final EditText editTextEmail;

  @NonNull
  public final EditText editTextPassword;

  @NonNull
  public final EditText editTextPasswordConfirm;

  @NonNull
  public final EditText editTextSurname;

  @NonNull
  public final EditText editTextfirstname;

  @NonNull
  public final TextView txtViewLoginLink;

  private ActivityRegisterBinding(@NonNull ScrollView rootView, @NonNull Button btnRegister,
      @NonNull EditText editTextEmail, @NonNull EditText editTextPassword,
      @NonNull EditText editTextPasswordConfirm, @NonNull EditText editTextSurname,
      @NonNull EditText editTextfirstname, @NonNull TextView txtViewLoginLink) {
    this.rootView = rootView;
    this.btnRegister = btnRegister;
    this.editTextEmail = editTextEmail;
    this.editTextPassword = editTextPassword;
    this.editTextPasswordConfirm = editTextPasswordConfirm;
    this.editTextSurname = editTextSurname;
    this.editTextfirstname = editTextfirstname;
    this.txtViewLoginLink = txtViewLoginLink;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRegister;
      Button btnRegister = rootView.findViewById(id);
      if (btnRegister == null) {
        break missingId;
      }

      id = R.id.editTextEmail;
      EditText editTextEmail = rootView.findViewById(id);
      if (editTextEmail == null) {
        break missingId;
      }

      id = R.id.editTextPassword;
      EditText editTextPassword = rootView.findViewById(id);
      if (editTextPassword == null) {
        break missingId;
      }

      id = R.id.editTextPasswordConfirm;
      EditText editTextPasswordConfirm = rootView.findViewById(id);
      if (editTextPasswordConfirm == null) {
        break missingId;
      }

      id = R.id.editTextSurname;
      EditText editTextSurname = rootView.findViewById(id);
      if (editTextSurname == null) {
        break missingId;
      }

      id = R.id.editTextfirstname;
      EditText editTextfirstname = rootView.findViewById(id);
      if (editTextfirstname == null) {
        break missingId;
      }

      id = R.id.txtViewLoginLink;
      TextView txtViewLoginLink = rootView.findViewById(id);
      if (txtViewLoginLink == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ScrollView) rootView, btnRegister, editTextEmail,
          editTextPassword, editTextPasswordConfirm, editTextSurname, editTextfirstname,
          txtViewLoginLink);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

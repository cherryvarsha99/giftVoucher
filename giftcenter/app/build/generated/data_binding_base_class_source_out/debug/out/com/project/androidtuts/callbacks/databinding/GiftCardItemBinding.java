// Generated by view binder compiler. Do not edit!
package com.project.androidtuts.callbacks.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.makeramen.roundedimageview.RoundedImageView;
import com.project.androidtuts.callbacks.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GiftCardItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView cardView1;

  @NonNull
  public final RoundedImageView imgGiftCard;

  @NonNull
  public final TextView tvAmount;

  @NonNull
  public final TextView tvGiftCode;

  @NonNull
  public final TextView tvRedeemStatus;

  private GiftCardItemBinding(@NonNull CardView rootView, @NonNull CardView cardView1,
      @NonNull RoundedImageView imgGiftCard, @NonNull TextView tvAmount,
      @NonNull TextView tvGiftCode, @NonNull TextView tvRedeemStatus) {
    this.rootView = rootView;
    this.cardView1 = cardView1;
    this.imgGiftCard = imgGiftCard;
    this.tvAmount = tvAmount;
    this.tvGiftCode = tvGiftCode;
    this.tvRedeemStatus = tvRedeemStatus;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static GiftCardItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GiftCardItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.gift_card_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GiftCardItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView cardView1 = (CardView) rootView;

      id = R.id.imgGiftCard;
      RoundedImageView imgGiftCard = rootView.findViewById(id);
      if (imgGiftCard == null) {
        break missingId;
      }

      id = R.id.tvAmount;
      TextView tvAmount = rootView.findViewById(id);
      if (tvAmount == null) {
        break missingId;
      }

      id = R.id.tvGiftCode;
      TextView tvGiftCode = rootView.findViewById(id);
      if (tvGiftCode == null) {
        break missingId;
      }

      id = R.id.tvRedeemStatus;
      TextView tvRedeemStatus = rootView.findViewById(id);
      if (tvRedeemStatus == null) {
        break missingId;
      }

      return new GiftCardItemBinding((CardView) rootView, cardView1, imgGiftCard, tvAmount,
          tvGiftCode, tvRedeemStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

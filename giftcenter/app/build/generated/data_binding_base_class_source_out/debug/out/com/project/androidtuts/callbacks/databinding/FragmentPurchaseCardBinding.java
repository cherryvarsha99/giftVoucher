// Generated by view binder compiler. Do not edit!
package com.project.androidtuts.callbacks.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.chivorn.smartmaterialspinner.SmartMaterialSpinner;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.project.androidtuts.callbacks.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPurchaseCardBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextInputEditText amountEditText;

  @NonNull
  public final TextInputLayout amountInputLayout;

  @NonNull
  public final LinearLayout amountInputLinearLayout;

  @NonNull
  public final Button btnPurchase;

  @NonNull
  public final LinearLayout currencyInputLayout;

  @NonNull
  public final SmartMaterialSpinner currencySpinnerDropdown;

  @NonNull
  public final TextInputEditText messageEditText;

  @NonNull
  public final TextInputLayout messageInputLayout;

  @NonNull
  public final TextInputEditText pinEditText;

  @NonNull
  public final TextInputLayout pinInputLayout;

  @NonNull
  public final LinearLayout purchaseBtnLayout;

  @NonNull
  public final View separator;

  @NonNull
  public final LinearLayout usdAmountLayout;

  @NonNull
  public final TextView usdAmountTextView;

  @NonNull
  public final SmartMaterialSpinner usdSpinner;

  @NonNull
  public final LinearLayout usdSpinnerLinearLayout;

  private FragmentPurchaseCardBinding(@NonNull RelativeLayout rootView,
      @NonNull TextInputEditText amountEditText, @NonNull TextInputLayout amountInputLayout,
      @NonNull LinearLayout amountInputLinearLayout, @NonNull Button btnPurchase,
      @NonNull LinearLayout currencyInputLayout,
      @NonNull SmartMaterialSpinner currencySpinnerDropdown,
      @NonNull TextInputEditText messageEditText, @NonNull TextInputLayout messageInputLayout,
      @NonNull TextInputEditText pinEditText, @NonNull TextInputLayout pinInputLayout,
      @NonNull LinearLayout purchaseBtnLayout, @NonNull View separator,
      @NonNull LinearLayout usdAmountLayout, @NonNull TextView usdAmountTextView,
      @NonNull SmartMaterialSpinner usdSpinner, @NonNull LinearLayout usdSpinnerLinearLayout) {
    this.rootView = rootView;
    this.amountEditText = amountEditText;
    this.amountInputLayout = amountInputLayout;
    this.amountInputLinearLayout = amountInputLinearLayout;
    this.btnPurchase = btnPurchase;
    this.currencyInputLayout = currencyInputLayout;
    this.currencySpinnerDropdown = currencySpinnerDropdown;
    this.messageEditText = messageEditText;
    this.messageInputLayout = messageInputLayout;
    this.pinEditText = pinEditText;
    this.pinInputLayout = pinInputLayout;
    this.purchaseBtnLayout = purchaseBtnLayout;
    this.separator = separator;
    this.usdAmountLayout = usdAmountLayout;
    this.usdAmountTextView = usdAmountTextView;
    this.usdSpinner = usdSpinner;
    this.usdSpinnerLinearLayout = usdSpinnerLinearLayout;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPurchaseCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPurchaseCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_purchase_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPurchaseCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amountEditText;
      TextInputEditText amountEditText = rootView.findViewById(id);
      if (amountEditText == null) {
        break missingId;
      }

      id = R.id.amountInputLayout;
      TextInputLayout amountInputLayout = rootView.findViewById(id);
      if (amountInputLayout == null) {
        break missingId;
      }

      id = R.id.amountInputLinearLayout;
      LinearLayout amountInputLinearLayout = rootView.findViewById(id);
      if (amountInputLinearLayout == null) {
        break missingId;
      }

      id = R.id.btnPurchase;
      Button btnPurchase = rootView.findViewById(id);
      if (btnPurchase == null) {
        break missingId;
      }

      id = R.id.currencyInputLayout;
      LinearLayout currencyInputLayout = rootView.findViewById(id);
      if (currencyInputLayout == null) {
        break missingId;
      }

      id = R.id.currencySpinnerDropdown;
      SmartMaterialSpinner currencySpinnerDropdown = rootView.findViewById(id);
      if (currencySpinnerDropdown == null) {
        break missingId;
      }

      id = R.id.messageEditText;
      TextInputEditText messageEditText = rootView.findViewById(id);
      if (messageEditText == null) {
        break missingId;
      }

      id = R.id.messageInputLayout;
      TextInputLayout messageInputLayout = rootView.findViewById(id);
      if (messageInputLayout == null) {
        break missingId;
      }

      id = R.id.pinEditText;
      TextInputEditText pinEditText = rootView.findViewById(id);
      if (pinEditText == null) {
        break missingId;
      }

      id = R.id.pinInputLayout;
      TextInputLayout pinInputLayout = rootView.findViewById(id);
      if (pinInputLayout == null) {
        break missingId;
      }

      id = R.id.purchaseBtnLayout;
      LinearLayout purchaseBtnLayout = rootView.findViewById(id);
      if (purchaseBtnLayout == null) {
        break missingId;
      }

      id = R.id.separator;
      View separator = rootView.findViewById(id);
      if (separator == null) {
        break missingId;
      }

      id = R.id.usdAmountLayout;
      LinearLayout usdAmountLayout = rootView.findViewById(id);
      if (usdAmountLayout == null) {
        break missingId;
      }

      id = R.id.usdAmountTextView;
      TextView usdAmountTextView = rootView.findViewById(id);
      if (usdAmountTextView == null) {
        break missingId;
      }

      id = R.id.usdSpinner;
      SmartMaterialSpinner usdSpinner = rootView.findViewById(id);
      if (usdSpinner == null) {
        break missingId;
      }

      id = R.id.usdSpinnerLinearLayout;
      LinearLayout usdSpinnerLinearLayout = rootView.findViewById(id);
      if (usdSpinnerLinearLayout == null) {
        break missingId;
      }

      return new FragmentPurchaseCardBinding((RelativeLayout) rootView, amountEditText,
          amountInputLayout, amountInputLinearLayout, btnPurchase, currencyInputLayout,
          currencySpinnerDropdown, messageEditText, messageInputLayout, pinEditText, pinInputLayout,
          purchaseBtnLayout, separator, usdAmountLayout, usdAmountTextView, usdSpinner,
          usdSpinnerLinearLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
